apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'ah-bottom-navigation'

    publishedGroupId = 'com.aurelhubert'
    libraryName = 'AHBottomNavigation'
    artifact = 'ahbottomnavigation'

    libraryDescription = 'A library to reproduce the behavior of the Bottom Navigation guidelines from Material Design.'

    siteUrl = 'https://github.com/aurelhubert/ahbottomnavigation'
    gitUrl = 'https://github.com/aurelhubert/ahbottomnavigation.git'

    libraryVersion = '1.2.3'

    developerId = 'aurelhubert'
    developerName = 'Aurelien Hubert'
    developerEmail = 'aurel.hubert@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 30
        versionName project.ext.libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:design:25.0.1'

    // Picasso image loading library
    compile 'com.squareup.picasso:picasso:2.5.2'
}


def libraryGroupId = 'com.conouch.view'
def libraryArtifactId = 'bottom-navigation'
def libraryVersion = '1.0.1'

group = publishedGroupId


version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId libraryGroupId
            version libraryVersion
            artifactId libraryArtifactId

            artifact("$buildDir/outputs/aar/${project.name}-release.aar")
        }
    }
}

artifactory {
    contextUrl = artifactory_context_url
    publish {
        repository {
            repoKey = 'libs-release-local'

            username = artifactory_username
            password = artifactory_password
        }
        defaults {
            publications('aar')
            publishArtifacts = true

            properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
            publishPom = true
        }
    }
}
